cfg_platform_name=android
#default values put it here
cfg_default_build_arches="all"
cfg_default_build_mode="release"
cfg_default_build_libraries="all"
#specific default values
cfg_default_build_api=19
cfg_default_gcc_version=4.8
#input your gcc version here or export it at your .bash_profile
cfg_android_ndk_path=

#help message strings goes here
cfg_help_arch_string="armeabi,armeabi-v7a,x86,arm64"
cfg_help_sample_string="./build.sh --libs=png --arch=armeabi,armeabi-v7a,arm64 [--api=21 --gcc=4.9] --mode=debug"

cfg_library_install_prefix="install-${cfg_platform_name}"
cfg_library_build_folder="${cfg_platform_name}"
cfg_build_fat_library=no


cfg_all_supported_arches=("armeabi" "armeabi-v7a" "x86" "arm64")
cfg_all_supported_libraries=("png" "zlib" "lua" "luajit" "websockets" "curl" "freetype" "jpeg"  "tiff" "webp" "chipmunk")
cfg_default_arches_all=("armeabi" "armeabi-v7a" "x86" "arm64")
cfg_default_libraries_all=("png" "zlib" "lua" "luajit" "websockets" "curl" "freetype" "jpeg" "tiff" "webp" "chipmunk")


cfg_build_release_mode="-O3 -DNDEBUG"
cfg_build_debug_mode="-O0 -g -DDEBUG"

function build_settings_for_android() 
{
    arch=$1
    echo "build_settings_for_android... Android_ABI = $arch"
    if [ ${arch} = "x86" ]; then
        TARGET="i686-linux-android"
        toolchain_bin=${ANDROID_NDK}/toolchains/x86-${build_gcc_version}/prebuilt/darwin-x86_64/bin
    elif [ ${arch} = "arm64" ];then
        TARGET="aarch64-linux-android"
        toolchain_bin=${ANDROID_NDK}/toolchains/${TARGET}-${build_gcc_version}/prebuilt/darwin-x86_64/bin
    else
        TARGET="arm-linux-androideabi"
        toolchain_bin=${ANDROID_NDK}/toolchains/${TARGET}-${build_gcc_version}/prebuilt/darwin-x86_64/bin
    fi
    
    export PATH="${toolchain_bin}:$PATH"
    
    # check whether gcc version is exists
    if [ ! -d ${ANDROID_NDK}/toolchains/x86-${build_gcc_version} ] && [ ! -d ${ANDROID_NDK}/toolchains/${TARGET}-${build_gcc_version} ] ;then
        echo ${ANDROID_NDK}
        echo "Invalid GCC ${build_gcc_version} version!"
        exit
    fi

    # check whether sysroot is exists
    if [ $arch = "arm64" ]; then
        if [ ! -d ${ANDROID_NDK}/platforms/android-${build_api}/arch-arm64 ];then
            echo "android-${build_api} doesn't support build arm64 architecture!"
            exit 1
        fi
    fi

    echo "build target is ${TARGET}"
    echo "build toolchain is $toolchain_bin"

    #export ANDROID_ABI & ANDROID_API
    ANDROID_ABI=$arch
    ANDROID_API=android-$build_api
    

    export ANDROID_ABI
    export ANDROID_API

    out="/dev/stdout"
    # if [ "$QUIET" = "yes" ]; then
    #     out="/dev/null"
    # fi

    #
    # build 3rd party libraries
    #
    pushd "${top_dir}/contrib"
    mkdir -p "Android-${ANDROID_ABI}" && cd "Android-${ANDROID_ABI}"


    #We let the scripts to guess the --build options
    ../bootstrap --enable-$2 \
                 --host=${TARGET} \
                 --prefix=${top_dir}/contrib/install-${cfg_platform_name}/${ANDROID_ABI}> $out

    echo "OPTIM := ${OPTIM}" >> config.mak
    echo "TOOLCHAIN_BIN := ${toolchain_bin}" >> config.mak
}
