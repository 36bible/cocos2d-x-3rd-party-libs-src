#don't change the platform name!!
cfg_platform_name=tizen
#default values put it here
cfg_default_build_arches="all"
cfg_default_build_mode="release"
cfg_default_build_libraries="all"
#specific default values
# cfg_default_build_api=19
# cfg_default_gcc_version=4.8
# cfg_android_ndk_path=/Users/guanghui/AndroidDev/android-ndk-r9d

#help message strings goes here
cfg_help_arch_string="armv7"
cfg_help_sample_string="./build.sh -p=tizen --libs=png --arch=armv7  --mode=debug"

cfg_library_install_prefix="install-${cfg_platform_name}"
cfg_library_build_folder="${cfg_platform_name}"
cfg_build_fat_library=no


cfg_all_supported_arches=("armv7")
cfg_all_supported_libraries=("png" "zlib" "lua" "luajit" "websockets" "curl" "freetype" "jpeg"  "tiff" "webp" "chipmunk")
cfg_default_arches_all=("armv7")
cfg_default_libraries_all=("png" "zlib" "lua" "luajit" "websockets" "curl" "freetype" "jpeg" "tiff" "webp" "chipmunk")


cfg_build_release_mode="-O3 -DNDEBUG"
cfg_build_debug_mode="-O0 -g -DDEBUG"

function build_settings_for_tizen()
{
   tizen_arch=$1

   [[ -z $TIZEN_SDK ]]  && echo "you must define TIZEN_SDK" && exit 1
   
   toolchain_bin=${TIZEN_SDK}/tools/arm-linux-gnueabi-gcc-4.8/bin

   export PATH="${toolchain_bin}:${top_dir}/extras/tools/bin:$PATH"
   TARGET="arm-linux-gnueabi"

   pushd "${top_dir}/contrib"
   
   mkdir -p "${cfg_platform_name}-${tizen_arch}" && cd "${cfg_platform_name}-${tizen_arch}"
   
   ../bootstrap --enable-$2 \
                --host=${TARGET} \
                --prefix=${top_dir}/contrib/install-${cfg_platform_name}/${tizen_arch}
                
    echo "OPTIM := ${OPTIM}" >> config.mak
}
